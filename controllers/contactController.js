// import nodemailer from "nodemailer";
// import Contact from "../models/Contact.js";

// export const handleContact = async (req, res) => {
//   const { name, email, message } = req.body;

//   try {
//     // 1. Save to MongoDB
//     const contact = new Contact({ name, email, message });
//     await contact.save();

//     // 2. Set up transporter
//     const transporter = nodemailer.createTransport({
//       service: "gmail",
//       auth: {
//         user: process.env.EMAIL_USER,
//         pass: process.env.EMAIL_PASS,
//       },
//     });

//     // 3. User confirmation email
//     const userMailOptions = {
//       from: `"Bean Scene Support" <${process.env.EMAIL_USER}>`,
//       to: email,
//       subject: "Thank you for contacting Bean Scene!",
//       html: `
//         <h2>Hello ${name},</h2>
//         <p>‚òï Thank you for reaching out to us!</p>
//         <p>We have received your message and will respond shortly.</p>
//         <hr />
//         <p><strong>Your Message:</strong><br />${message}</p>
//         <br />
//         <p>Warm regards,<br />Bean Scene Team</p>
//       `,
//     };

//     // 4. Admin notification email
//     const adminMailOptions = {
//       from: `"Bean Scene Website" <${process.env.EMAIL_USER}>`,
//       to: process.env.ADMIN_EMAIL, // Add this to .env file
//       subject: `üì¨ New Contact Form Submission from ${name}`,
//       html: `
//         <h2>New Contact Form Submission</h2>
//         <p><strong>Name:</strong> ${name}</p>
//         <p><strong>Email:</strong> ${email}</p>
//         <p><strong>Message:</strong><br />${message}</p>
//         <br />
//         <p>üìß This was auto-generated by your website.</p>
//       `,
//     };

//     // 5. Send both emails
//     await transporter.sendMail(userMailOptions);
//     await transporter.sendMail(adminMailOptions);

//     // 6. Response
//     res.status(200).json({
//       success: true,
//       message: "Message sent and emails delivered!",
//     });
//   } catch (err) {
//     console.error("Email Send Error:", err);
//     res.status(500).json({
//       success: false,
//       message: "Failed to send message.",
//     });
//   }
// };







import nodemailer from "nodemailer";
import Contact from "../models/Contact.js";

export const handleContact = async (req, res) => {
  const { name, email, message } = req.body;

  try {
    // 1. Save to MongoDB
    const contact = new Contact({ name, email, message });
    await contact.save();

    // 2. Turant success response (no wait for email)
    res.status(200).json({
      success: true,
      message: "Message received successfully! ‚úÖ",
    });

    // 3. Setup transporter
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });

    // 4. User confirmation email
    const userMailOptions = {
      from: `"Bean Scene Support" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: "Thank you for contacting Bean Scene!",
      html: `
        <h2>Hello ${name},</h2>
        <p>‚òï Thank you for reaching out to us!</p>
        <p>We have received your message and will respond shortly.</p>
        <hr />
        <p><strong>Your Message:</strong><br />${message}</p>
        <br />
        <p>Warm regards,<br />Bean Scene Team</p>
      `,
    };

    // 5. Admin notification email
    const adminMailOptions = {
      from: `"Bean Scene Website" <${process.env.EMAIL_USER}>`,
      to: process.env.ADMIN_EMAIL,
      subject: `üì¨ New Contact Form Submission from ${name}`,
      html: `
        <h2>New Contact Form Submission</h2>
        <p><strong>Name:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>Message:</strong><br />${message}</p>
        <br />
        <p>üìß This was auto-generated by your website.</p>
      `,
    };

    // 6. Background me emails bhejna (no blocking)
    Promise.all([
      transporter.sendMail(userMailOptions),
      transporter.sendMail(adminMailOptions)
    ]).then(() => {
      console.log("üì® Contact emails sent successfully");
    }).catch(err => {
      console.error("‚ùå Contact Email Error:", err);
    });

  } catch (err) {
    console.error("‚ùå Contact Form Error:", err);
    res.status(500).json({
      success: false,
      message: "Something went wrong. Please try again.",
    });
  }
};
